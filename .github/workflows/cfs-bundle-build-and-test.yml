name: Build and Test cFS Bundle
# Workflow builds and tests osal using the cFS-level makefile

on:
  push:
  pull_request:
env:
  PERMISSIVE_MODE: true
  OMIT_DEPRECATED: true
  SIMULATION: native

jobs:

  prepare-environment:
    name: Prepare Build environment
    runs-on: ubuntu-18.04

    steps:

      # Checkout bundle repository
      - name: checkout-bundle
        uses: actions/checkout@v2
        with:
          repository: nasa/cFS
          submodules: true
          ref: integration-candidate

      - name: Setup Git Environment
        run: |
          echo "GITHUB_PR_BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
          cd osal
          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote add fork https://github.com/${{github.repository}}.git
          git fetch fork

      - name: Update OSAL
        run: |
          git checkout fork/${{env.GITHUB_PR_BRANCH}}
        working-directory: osal

      - name: Check versions
        run: git submodule
        working-directory: /home/runner/work/osal/osal

      - name: Prep for cFS bundle build
        run: |
          cp ./cfe/cmake/Makefile.sample Makefile
          cp -r ./cfe/cmake/sample_defs sample_defs
          make prep

      - name: Cache cFS Build Environment
        id: cache-bundle
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/work/osal/osal/*
          key: bundle-${{ github.run_number }}

      - name: Prep for Standalone OSAL build
        run: |
          cp Makefile.sample Makefile
          make prep
        working-directory: /home/runner/work/osal/osal/osal

      - name: Cache OSAL Build Environment
        id: cache-osal
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/work/osal/osal/osal/*
          key: osal-${{ github.run_number }}

  build-bundle-run-tests:
    name: Build with cFS Bundle and Test
    runs-on: ubuntu-18.04
    needs: prepare-environment
    timeout-minutes: 15

    steps:

      - name: Cache cFS Build Environment
        id: cache-bundle
        uses: actions/cache@v2
        with:
          path: /home/runner/work/osal/osal/*
          key: bundle-${{ github.run_number }}

      - name: Build cFS-context OSAL
        run: |
          make -j build/native/default_cpu1/osal/

      - name: Build with Tests
        run: |
          make ENABLE_UNIT_TESTS=true prep
          make -j build/native/default_cpu1/osal/

      - name: Run tests
        run: make test
        working-directory: build/native/default_cpu1/osal

  build-local-run-tests:
    name: Build Standalone OSAL and Run tests
    runs-on: ubuntu-18.04
    needs: prepare-environment
    timeout-minutes: 15

    steps:

      - name: Install Tools
        run: sudo apt-get install lcov -y

      - name: Cache OSAL Build Environment
        id: cache-osal
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/work/osal/osal/osal/*
          key: osal-${{ github.run_number }}

      - name: Build
        run: make -j
        working-directory: /home/runner/work/osal/osal/osal


      - name: Build with Tests
        run: |
          make ENABLE_UNIT_TESTS=true prep
          make -j
        working-directory: /home/runner/work/osal/osal/osal


      # Baseline lcov and run all tests
      - name: Test
        run: make test
        working-directory: /home/runner/work/osal/osal/osal


      - name: Calculate Coverage
        run: make lcov | tee lcov_out.txt
        working-directory: /home/runner/work/osal/osal/osal

      - name: Confirm 100% Line Coverage
        run: |
          if [[ `grep -A 3 "Overall coverage rate" lcov_out.txt | grep lines` != *"100.0%"* ]]; then
            grep -A 3 "Overall coverage rate" lcov_out.txt
            echo "Lacks 100.0% line unit test coverage"
            exit -1
          fi
        working-directory: /home/runner/work/osal/osal/osal
